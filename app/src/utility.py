from __future__ import print_function
import plotly.express as px
import pandas as pd
import sys


class Utility(object):
    """This is a collection of widely-used functions"""

    @classmethod
    def date_to_iso8601(cls, date_obj):
        """Returns an ISO8601-formatted string for datetime arg"""
        retval = date_obj.isoformat()
        return retval

    @classmethod
    def log_stdout(cls, message, component="IMAGE_VULNERABILITY_REPORT"):
        """Log messages to stdout.

        Args:
            message(str): Message to be logged to stdout.
            component(str): Component name. Defaults to "IMAGE_VULNERABILITY_REPORT".
        """
        out = "%s: %s" % (component, message)
        print(out, file=sys.stdout)
        return

    @classmethod
    def log_stderr(cls, message, component="IMAGE_VULNERABILITY_REPORT"):
        """Log messages to stderr.

        Args:
            message(str): Message to be logged to stdout.
            component(str): Component name. Defaults to "IMAGE_VULNERABILITY_REPORT".
        """
        out = "%s: %s" % (component, message)
        print(out, file=sys.stderr)
        return

    def plot_pie_graph(no_of_vulnerable_images, no_of_non_vulnerable_images, graph_absolute_path):
        d_labels = ['Vulerable Container Images',
                    'Non-Vulerable Container Images']
        values = [no_of_vulnerable_images, no_of_non_vulnerable_images]
        data = {'Item': d_labels,
                'Percentage': values}
        df = pd.DataFrame(data)
        fig = px.pie(df, values='Percentage', names='Item', color='Item', color_discrete_map={'Vulerable Container Images': 'red',
                                                                                              'Non-Vulerable Container Images': 'green'})
        fig.write_image(graph_absolute_path)
